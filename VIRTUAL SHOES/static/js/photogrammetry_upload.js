function request(e,o,t=null,n=null){return new Promise(function(r,i){const s=new XMLHttpRequest;n&&(s.responseType=n),s.onload=(()=>{s.status>=200&&s.status<300?r(s.response):i(s.response)}),s.onerror=(e=>{i(e)}),s.open(o,e,!0),s.send(t)})}function readContents(e){return new Promise(function(o){var t=0,n=[];!function e(r){t+=1,r.readEntries(function(i){for(var s of(t-=1,i))s.isDirectory?e(s.createReader()):n.push(s);i.length?e(r):0==t&&o(n)})}(e.createReader())})}async function getAllFiles(e){let o=[],t=[];for(let r of e){var n=r.webkitGetAsEntry();n.isDirectory?t.push(readContents(n).then(e=>{o=o.concat(e)})):n.isFile&&o.push(n)}await Promise.all(t),t=[];let r=[];for(let e of o)t.push(new Promise(function(o){e.file(e=>{r.push(e),o()})}));return await Promise.all(t),r}function upload_archive(e,o=(()=>{}),t=!1){return new Promise(function(n,r){if(!e)return o("No files provided"),void r("No files provided");if(e[0].size>209715200&&!window.isAdmin){let t=Math.round(e[0].size/1048576)+"MB";return o("File too big: "+t+" (max 200MB)"),void r("File too big: "+t+" (max 200MB)")}let i=new XMLHttpRequest;i.onload=(()=>{if(i.status>=200&&i.status<300){console.log(i.response);let e=JSON.parse(i.response)[0]||{};e.id?(n(e),o("OK")):e.error?(o(e.error),r(e.error)):(o("Unknown error"),r("Unknown error"))}else o(i.response)}),i.onerror=(e=>{o(e),r()}),i.upload.onprogress=(e=>{console.log(e);let t=Math.round(100*e.loaded/e.total);o(100===t?"Processing...":`Uploaded ${Math.round(100*e.loaded/e.total)}% of ${Math.round(e.total/1048576)}MB`)});let s=new FormData;for(let o of e)s.append("files",o);t&&s.append("no_process","1"),i.open("POST","/photogrammetry/api/add_task",!0),i.send(s)})}async function upload_photos_or_zip_file(e,o=(()=>{}),t=!1){try{if(e.length>1){return await upload_files_partial(e,o,t=!1)}if(1===e.length){let n=e[0],r=n.name.toLowerCase();if(r.endsWith(".zip")||r.endsWith(".tar")||r.endsWith(".mp4")||r.endsWith(".mov")){return await upload_archive(e,o,t)}o("Bad file: "+n.name)}else o("No dropped files")}catch(e){throw o(e),e}}async function upload_files_zipped(e,o=(()=>{}),t=!1){o("Compressing "+e.length+" files...");let n=new JSZip;for(let o of e)n.file(o.name,o);let r=await n.generateAsync({type:"blob",compression:"STORE"},e=>{o("Compressing "+Math.round(e.percent)+" %")}),i=new File([r],"photos.zip");return o("Uploading..."),upload_archive([i],o,t)}async function upload_files_partial(e,o=(()=>{}),t=!1){if(!e)return o("No files provided"),void reject("No files provided");const n=Math.random().toString(36).substring(3);for(let t=0;t<e.length;++t){o(`Uploaded ${Math.round(100*t/e.length)}%`);const r=e[t],i=new FormData;i.append("files",r),i.append("id",n),await request("/photogrammetry/api/add_photos","POST",i)}o("Processing...");const r=new FormData;r.append("id",n),t&&r.append("no_process","1");const i=await request("/photogrammetry/api/add_photos_finalize","POST",r),s=JSON.parse(i);return o("OK"),s}